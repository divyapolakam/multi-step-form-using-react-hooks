{"version":3,"sources":["components/Form1.js","components/Form2.js","components/Confirm.js","components/Success.js","App.js","serviceWorker.js","index.js"],"names":["Form1","_ref","values","react_default","a","createElement","style","marginTop","TextField_default","id","label","margin","variant","value","fname","onChange","e","setFname","target","lname","setLname","Button_default","color","disabled","onClick","handleNext","Form2","type","email","setEmail","no","setNo","handlePrev","Confirm","textAlign","maxWidth","List_default","ListItem_default","ListItemText_default","primary","secondary","Success","clearForm","App","_useState","useState","_useState2","Object","slicedToArray","step","setStep","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","preventDefault","console","log","className","styles","AppBar_default","components_Form1","components_Form2","components_Confirm","components_Success","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb6dbef5.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Form1 = ({ values }) => {\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <h1>Name Please?</h1>\n      <form>\n        <TextField\n          id=\"fname\"\n          label=\"First Name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          value={values.fname}\n          onChange={e => values.setFname(e.target.value)}\n        />\n        &nbsp; &nbsp;\n        <TextField\n          id=\"lname\"\n          label=\"Last Name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          value={values.lname}\n          onChange={e => values.setLname(e.target.value)}\n        />\n        <br />\n        <br />\n        <Button variant=\"contained\" color=\"secondary\" disabled>\n          Back\n        </Button>\n        &nbsp; &nbsp;\n        <Button variant=\"contained\" color=\"primary\" onClick={values.handleNext}>\n          Next\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form1;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Form2 = ({ values }) => {\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <h1>Contacts Please?</h1>\n      <TextField\n        id=\"outlined-email-input\"\n        label=\"Email\"\n        type=\"email\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        value={values.email}\n        onChange={e => values.setEmail(e.target.value)}\n      />\n      &nbsp; &nbsp;\n      <TextField\n        id=\"outlined-number\"\n        label=\"Phone Number\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        value={values.no}\n        onChange={e => values.setNo(e.target.value)}\n      />\n      <br />\n      <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={values.handlePrev}>\n        Back\n      </Button>\n      &nbsp; &nbsp;\n      <Button variant=\"contained\" color=\"primary\" onClick={values.handleNext}>\n        Next\n      </Button>\n    </div>\n  );\n};\n\nexport default Form2;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst Confirm = ({ values }) => {\n  return (\n    <div style={{ marginTop: \"90px\", textAlign: \"center\", maxWidth: \"360\" }}>\n      <h1>Verify Details</h1>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"First Name\" secondary={values.fname} />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"Last Name\" secondary={values.lname} />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"Email ID\" secondary={values.email} />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"Phone Number\" secondary={values.no} />\n        </ListItem>\n      </List>\n      <br />\n      <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={values.handlePrev}>\n        Back\n      </Button>\n      &nbsp; &nbsp;\n      <Button variant=\"contained\" color=\"primary\" onClick={values.handleNext}>\n        Confirm\n      </Button>\n    </div>\n  );\n};\nexport default Confirm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Success = ({ fname, clearForm }) => {\n  return (\n    <div style={{ marginTop: \"90px\", textAlign: \"center\" }}>\n      <h1>Form Submitted Successfully</h1>\n      <p>Thank you {fname}. We will get back to you soon</p>\n      <Button variant=\"contained\" color=\"primary\" onClick={clearForm}>\n        Go Home\n      </Button>\n    </div>\n  );\n};\n\nexport default Success;\n","import React, { useState } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport \"./App.css\";\n\nimport Form1 from \"./components/Form1\";\nimport Form2 from \"./components/Form2\";\nimport Confirm from \"./components/Confirm\";\nimport Success from \"./components/Success\";\n\nfunction App() {\n  const [step, setStep] = useState(0);\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [no, setNo] = useState(\"\");\n\n  const handleNext = e => {\n    e.preventDefault();\n    setStep(step + 1);\n    console.log(fname + \" \" + lname);\n  };\n\n  const handlePrev = e => {\n    e.preventDefault();\n    setStep(step - 1);\n  };\n\n  const clearForm = e => {\n    e.preventDefault();\n    setStep(0);\n    setFname(\"\");\n    setLname(\"\");\n    setEmail(\"\");\n    setNo(\"\");\n  };\n\n  const values = {\n    fname,\n    setFname,\n    lname,\n    setLname,\n    email,\n    setEmail,\n    no,\n    setNo,\n    handleNext,\n    handlePrev\n  };\n  console.log(step);\n  const show = () => {\n    switch (step) {\n      case 0:\n        return <Form1 values={values} />;\n      case 1:\n        return <Form2 values={values} />;\n      case 2:\n        return <Confirm values={values} />;\n      case 3:\n        return <Success fname={fname} clearForm={clearForm} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider>\n        <AppBar>\n          <p>Multi Step User-form (Step - {step + 1}/4) </p>\n        </AppBar>\n        {show()}\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}